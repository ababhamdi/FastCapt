//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FastCapt.Recorders.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FastCapt.Recorders.Resources.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to use BitBlt..
        /// </summary>
        internal static string BitBlt_Fail {
            get {
                return ResourceManager.GetString("BitBlt_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a compatible Bitmap..
        /// </summary>
        internal static string CompatibleBitmap_Fail {
            get {
                return ResourceManager.GetString("CompatibleBitmap_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a compatible DC of the Desktop DC..
        /// </summary>
        internal static string CompatibleDC_Create_Fail {
            get {
                return ResourceManager.GetString("CompatibleDC_Create_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to release the DesktopWindow Device Context..
        /// </summary>
        internal static string DesktopWnd_FailReleaseDC {
            get {
                return ResourceManager.GetString("DesktopWnd_FailReleaseDC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DesktopDC is not defined..
        /// </summary>
        internal static string DeviceContext_NotInit {
            get {
                return ResourceManager.GetString("DeviceContext_NotInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the desktop window handle..
        /// </summary>
        internal static string Failed_DesktopWindow_Handle {
            get {
                return ResourceManager.GetString("Failed_DesktopWindow_Handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the DeviceContext of the desktop window..
        /// </summary>
        internal static string Failed_DesktopWnd_DC {
            get {
                return ResourceManager.GetString("Failed_DesktopWnd_DC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to select a snapshot buffer to a device context..
        /// </summary>
        internal static string SelectObject_Fail {
            get {
                return ResourceManager.GetString("SelectObject_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that the SnapshotManager is initialized..
        /// </summary>
        internal static string SnapshotManager_InitializeFail {
            get {
                return ResourceManager.GetString("SnapshotManager_InitializeFail", resourceCulture);
            }
        }
    }
}
